#' @export
goog_account <- function () {
getOption("ggmap")$google$account_type
}
#' @rdname register_google
#' @export
goog_client <- function () {
getOption("ggmap")$google$client
}
#' @rdname register_google
#' @export
has_goog_client <- function () {
if(is.null(getOption("ggmap"))) return(FALSE)
!is.na(goog_client())
}
#' @rdname register_google
#' @export
goog_signature <- function () {
getOption("ggmap")$google$signature
}
#' @rdname register_google
#' @export
has_goog_signature <- function () {
if(is.null(getOption("ggmap"))) return(FALSE)
!is.na(goog_signature())
}
#' @rdname register_google
#' @export
goog_second_limit <- function () {
# set to 50 if no key present (ggmap not loaded)
if(!has_goog_key()) return(50)
getOption("ggmap")$google$second_limit
}
#' @rdname register_google
#' @export
goog_day_limit <- function () {
# set to 2500 if no key present (ggmap not loaded)
if(!has_goog_key()) return(2500)
getOption("ggmap")$google$day_limit
}
#' @rdname register_google
#' @param tree a json tree from \code{\link{fromJSON}}
#' @export
check_google_for_error <- function (tree) {
if (tree$status == "REQUEST_DENIED") {
warning("REQUEST_DENIED : ", tree$error_message)
}
}
register_google(key = "AIzaSyA89eaGXPQ3fgCxnHvFKGe8xgJOqgc31xo")
library(ggmap)
library(mapproj)
library(dplyr)
library(forcats)
register_google(key = "AIzaSyA89eaGXPQ3fgCxnHvFKGe8xgJOqgc31xo")
map <- get_map(location = 'Taiwan', zoom = 7)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)
map <- get_map(location = 'Taiwan', zoom = 7)
register_google(key = "AIzaSyA89eaGXPQ3fgCxnHvFKGe8xgJOqgc31xo", day_limit=1000)
map <- get_map(location = 'Taiwan', zoom = 7)
install_github("dkahle/ggmap")
with_libpaths(new = "C:\Users\perot\Documents\R\win-library\3.5", install_github("dkahle/ggmap"))
with_libpaths(new = "\Users\perot\Documents\R\win-library\3.5", install_github("dkahle/ggmap"))
with_libpaths(new = "C:\Users\perot\Documents\R\win-library\3.5", install_github("dkahle/ggmap"))
with_libpaths(new = "C:\users\perot\Documents\R\win-library\3.5", install_github("dkahle/ggmap"))
with_libpaths(new = "C:/users/perot/Documents/R/win-library/3.5", install_github("dkahle/ggmap"))
with_libpaths(new = "C:/users/perot/Documents/R/win-library/3.5", install_github("dkahle/ggmap"))
temdir()
tempdir()
with_libpaths(new = "C:\\users\\perot\\Documents\\R\\win-library\\3.5", install_github("dkahle/ggmap"))
map <- get_map(location = 'Taiwan', zoom = 7)
library(ggmap)
library(ggmap)
library(mapproj)
library(dplyr)
library(forcats)
map <- get_map(location = 'Taiwan', zoom = 7)
register_google("AIzaSyDeg7rbHKNvXCdbg5fywFJQk8ObYDdWIUY")
map <- get_map(location = 'Taiwan', zoom = 7)
library(devtools)
install_github("SymbolixAU/googleway")
register_google("AIzaSyDeg7rbHKNvXCdbg5fywFJQk8ObYDdWIUY")
map <- get_map(location = 'Taiwan', zoom = 7)
register_google("AIzaSyDeg7rbHKNvXCdbg5fywFJQk8ObYDdWIUY",day_limit = 1000)
map <- get_map(location = 'Taiwan', zoom = 7)
map <- get_googlemap(location = 'Taiwan', zoom = 7)
map <- get_googlemap(location = 'Taiwan',urlonly = True, zoom = 7)
map <- get_googlemap(location = 'Taiwan',urlonly = TRUE , zoom = 7)
ggmap(map)
register_google("AIzaSyDeg7rbHKNvXCdbg5fywFJQk8ObYDdWIUY",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan',urlonly = TRUE , zoom = 7)
ggmap(map)
map
library(ggmap)
library(mapproj)
library(dplyr)
library(forcats)
register_google("AIzaSyDeg7rbHKNvXCdbg5fywFJQk8ObYDdWIUY",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan',urlonly = TRUE , zoom = 7)
map
ggmap(map)
map = get_googlemap(center= c(lon=median(sespot$lon),lat=median(sespot$lat))
,zoom = 14 , maptype = "satellite")
library(ggmap)
library(mapproj)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)
register_google("AIzaSyCYIbzoIJnDaEbTjYg2do0cJvnKvQcfdos",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan',urlonly = TRUE , zoom = 7)
ggmap(map)
map = get_googlemap(center= c(lon=median(sespot$lon),lat=median(sespot$lat))
,zoom = 14 , maptype = "satellite")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap_credentials()
require("RCurl")
library("jsonlite")
data <- fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=15a8dc36-3173-4d94-8144-a390d17ac34a")
lon = sapply(data$result$results$經度, as.numeric)
lat = sapply(data$result$results$緯度, as.numeric)
library(ggplot2)
library(maptools)
library(rgeos)
library(Cairo)
library(ggmap)
library(scales)
library(RColorBrewer)
library(mapproj)
# Different type
#map <- get_map(location = c(lon = 121.533937, lat = 25.03933), zoom = 13, language = "zh-TW", maptype = "roadmap")
# Great to show data on the map
map <- get_map(location = c(lon = 121.533937, lat = 25.03933), zoom = 13, language = "zh-TW", maptype = "toner-lite")
# ggmap(map)
ggmap(map) + geom_point(aes(x = lon, y = lat, color = "red"), data = data$result$results)
require("RCurl")
library("jsonlite")
install.packages("RCurl")
require("RCurl")
library("jsonlite")
data <- fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=15a8dc36-3173-4d94-8144-a390d17ac34a")
lon = sapply(data$result$results$經度, as.numeric)
lat = sapply(data$result$results$緯度, as.numeric)
library(ggplot2)
library(maptools)
install.packages("maptools")
map <- get_map(location = c(lon = 121.533937, lat = 25.03933), zoom = 13, language = "zh-TW", maptype = "toner-lite")
map <- get_map(location = c(lon = 121.533937, lat = 25.03933), zoom = 13, language = "zh-TW", maptype = "toner-lite")
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
ggmap_credentials()
ggmap(map)
map <- get_googlemap(location = 'Taiwan',urlonly = TRUE , zoom = 7)
ggmap(map)
map <- get_map(location = 'Taiwan',urlonly = TRUE , zoom = 7)
ggmap(map)
map <- get_map(location = 'Taiwan',urlonly = TRUE , zoom = 7)
map <- get_map(location = 'Taiwan',, zoom = 7)
map <- get_map(location = 'Taiwan', zoom = 7)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap_credentials()
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)
map
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_map(location = 'Taiwan', zoom = 7)
map <- get_map(location = 'Taipei', zoom = 7)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_map(location = 'Taipei', zoom = 7)
ggmap(map)
ggmap(map)
map
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)
map <- get_map(location = 'Taiwan', zoom = 15)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_map(location = 'Taiwan', zoom = 15)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_map(location = 'Taiwan', zoom = 15)
library(ggmap)
library(mapproj)
library(dplyr)
library(forcats)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_map(location = 'Taiwan', zoom = 15)
ggmap(map)
View(Aug_data)
View(canvas)
View(df)
map <- get_map(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
ggmap(map)
library(ggmap)
library(mapproj)
library(dplyr)
library(forcats)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
ggmap(map)
map = get_googlemap(center= c(lon=median(sespot$lon),lat=median(sespot$lat))
,zoom = 14 , maptype = "satellite")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap_credentials()
ggmap(map)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
ggmap(map)
map = get_googlemap(center= c(lon=median(sespot$lon),lat=median(sespot$lat))
,zoom = 14 , maptype = "satellite")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap_credentials()
ggmap(map)
map
register_google("AIzaSyB8N5qP3TmqFQisSDHaBPMu_7rWGyXf0Ec",day_limit = 1000)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
install.packages("leaflet")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m
map <- get_googlemap(location = 'Taiwan', zoom = 15)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng = -71.0589, lat = 42.3601, popup="The birthplace of R")
m
map = get_googlemap(center= c(lon=median(sespot$lon),lat=median(sespot$lat))
,zoom = 14 , maptype = "satellite")
map <- get_map(location = 'Taiwan', zoom = 7)
map <- get_googlemap(location = 'Taiwan', zoom = 15)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng = 29.763284, lat =-95.363271, popup="The birthplace of R")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng = -95.363271, lat =29.763284, popup="The birthplace of R")
m
leaflet() %>% addTiles() %>% setView(120, 23.5, zoom = 4)
leaflet() %>% addTiles() %>% setView(120, 23.5, zoom = 10)
leaflet() %>% addTiles() %>% setView(121, 23.5, zoom = 10)
leaflet() %>% addTiles() %>% setView(121, 24.5, zoom = 10)
leaflet() %>% addTiles() %>% setView(121.5, 24.5, zoom = 10)
leaflet() %>% addTiles() %>% setView(121.5, 25, zoom = 10)
leaflet() %>% addTiles() %>% setView(121.5, 25, zoom = 15)
leaflet() %>% addTiles() %>% setView(121.5, 25, zoom = 13)
library(rvest)
read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-2.html")
doc <- read_html("http://news.pts.org.tw/list/1") # 把網頁先存在一個變數裡，不用每次都連線造訪
doc <- read_html("http://news.pts.org.tw/list/1") # 把網頁先存在一個變數裡，不用每次都連線造訪
read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-2.html")
doc <- read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-2.html") # 把網頁先存在一個變數裡，不用每次都連線造訪
doc %>% html_nodes("tr+ tr td:nth-child(4)")
doc %>% html_nodes("tr+ tr td:nth-child(4)")%>% html_text()
doc
add <- doc %>% html_nodes("tr+ tr td:nth-child(4)")%>% html_text()
add
doc <- read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-1.html") # 把網頁先存在一個變數裡，不用每次都連線造訪
add <- doc %>% html_nodes("tr+ tr td:nth-child(4)")%>% html_text()
add
doc <- read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-3.html") # 把網頁先存在一個變數裡，不用每次都連線造訪
add <- doc %>% html_nodes("tr+ tr td:nth-child(4)")%>% html_text()
add
leaflet() %>% addTiles() %>% setView(120.9689,24.7966, zoom = 13)
map <- leaflet() %>% addTiles() %>% setView(120.9689,24.7966, zoom = 13)
map <- leaflet() %>% addTiles() %>% setView(120.9689,24.7966, zoom = 13)
View(map)
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_4/map")
read.csv(address.csv)
# BASIC REQUIRED PACKAGES
rm(list=ls(all.names=TRUE)) #remove the list
library(devtools)
library(twitteR)
library(data.table)
consumerKey <- ""
consumerSecret <- ""
accessToken <- ""
accessSecret <- ""
options(httr_oauth_cache=T) # This will enable the use of a local file to cache OAuth access credentials between R sessions.
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessSecret)
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#Undertale',
n=50,
since = '2018-03-13',
until = '2018-03-18')
tweets.list <- twListToDF(tweets)
names.list <-  rbindlist(lapply(tweets.list$screenName,
as.data.frame))
library(twitteR)
library(data.table)
### example_1_twitterR
### Refs:
## Package manual https://cran.r-project.org/web/packages/twitteR/twitteR.pdf
## Mapping Twitter Followers in R https://www.r-bloggers.com/mapping-twitter-followers-in-r/
## Twitter API : https://apps.twitter.com/
## Check followthehashtag to inspire some idea http://followthehashtag.com/
install.packages("twitteR")
library(data.table)
library(twitteR)
library(devtools)
library(twitteR)
library(data.table)
consumerKey <- ""
consumerSecret <- ""
accessToken <- ""
accessSecret <- ""
options(httr_oauth_cache=T) # This will enable the use of a local file to cache OAuth access credentials between R sessions.
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessSecret)
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#Undertale',
n=50,
since = '2018-03-13',
until = '2018-03-18')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
n=50,
since = '2018-03-13',
until = '2018-03-18')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
n=50,
since = '2015-09-15',
until = '2018-09-15')
options(httr_oauth_cache=T) # This will enable the use of a local file to cache OAuth access credentials between R sessions.
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessSecret)
consumerKey <- "os9BSEDDSzZKaa79hWbXeAUmm"
consumerSecret <- "K6KcZy4ZhQYpFoMWKKgZjVTXKSP4gAvTc760meWwmlQLJEWsAg"
accessToken <- "3301954536-dvRxov51hUw3tU8yrJJnIDGHfhL0gVimjGX92u6"
accessSecret <- "4Y7uewr8SyVmdAXuFBp2jXKskaLVuasmtPoizyR2Fx2x5"
options(httr_oauth_cache=T) # This will enable the use of a local file to cache OAuth access credentials between R sessions.
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessSecret)
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
n=50,
since = '2015-09-15',
until = '2018-09-15')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
since = '2015-09-15',
until = '2018-09-15')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
since = '2015-09-15',
until = '2018-09-15')
consumerKey <- "os9BSEDDSzZKaa79hWbXeAUmm"
consumerSecret <- "K6KcZy4ZhQYpFoMWKKgZjVTXKSP4gAvTc760meWwmlQLJEWsAg"
accessToken <- "3301954536-dvRxov51hUw3tU8yrJJnIDGHfhL0gVimjGX92u6"
accessSecret <- "4Y7uewr8SyVmdAXuFBp2jXKskaLVuasmtPoizyR2Fx2x5"
options(httr_oauth_cache=T) # This will enable the use of a local file to cache OAuth access credentials between R sessions.
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessSecret)
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
since = '2015-09-15',
until = '2018-09-15')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#NBA',
since = '2015-09-15',
until = '2018-09-15')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
since = '2015-09-15',
until = '2018-09-15')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
since = '2015-09-15',
until = '2018-09-15')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',
since = '2018-09-28',
until = '2018-10-04')
View(tweets)
tweets.list <- twListToDF(tweets)
View(tweets)
View(tweets.list)
names.list <-  rbindlist(lapply(tweets.list$screenName,
as.data.frame))
names(names.list)[1] <- "Name" #CHANGE THE COLUMNS NAME
##STEP 3:GET EACH PERSON
alldata <- data.frame()
for (i in 1:3){ #Cursor
tryCatch(
{
# get name from '#_______' users list
tag.user <- names.list$Name[i]
# print query location
print(paste(i, tag.user))
# get User's twitter account
tag.user.account <- getUser(tag.user)
# get account's friend (if accessible)
user.friends <- tag.user.account$getFriends(retryOnRateLimit=180)
print(length(user.friends))
# limit
if (length(user.friends) < 3000){
# Make data.table of user's friends data list.
friends.df <- rbindlist(lapply(user.friends, as.data.frame))
# Get the only friends name column.
friends.name.df <- data.frame(tempname=c(friends.df$name))
# Change column name
colname <- toString(tag.user)
setnames(friends.name.df, c(colname))
# Write table
write.table(friends.name.df, file = paste(colname, ".csv"))
# bind data in the same data.frame
alldata <- rbind.fill(alldata, friends.name.df)
#data <- cbind(list(data, friends.name.df))
}
else{
print(paste(i, tag.user, "<== friends count > 500"))
}
},
warning = function(w){},
error = function(e){
#ERROR (need to store it?)
print(paste("ERROR", tag.user))
},
finally = {
print("End Try&Catch")
})
i = i+1
}
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',n = 1000
since = '2018-09-28',
until = '2018-10-04')
# STEP 2: GET THE  TAGGED TWEETS DATA LIST
# GET THE '#___________" TAGGED TWEETS
tweets <- searchTwitter('#undertale',n = 1000,
since = '2018-09-28',
until = '2018-10-04')
tweets.list <- twListToDF(tweets)
names.list <-  rbindlist(lapply(tweets.list$screenName,
as.data.frame))
names(names.list)[1] <- "Name" #CHANGE THE COLUMNS NAME
##STEP 3:GET EACH PERSON
alldata <- data.frame()
for (i in 1:3){ #Cursor
tryCatch(
{
# get name from '#_______' users list
tag.user <- names.list$Name[i]
# print query location
print(paste(i, tag.user))
# get User's twitter account
tag.user.account <- getUser(tag.user)
# get account's friend (if accessible)
user.friends <- tag.user.account$getFriends(retryOnRateLimit=180)
print(length(user.friends))
# limit
if (length(user.friends) < 3000){
# Make data.table of user's friends data list.
friends.df <- rbindlist(lapply(user.friends, as.data.frame))
# Get the only friends name column.
friends.name.df <- data.frame(tempname=c(friends.df$name))
# Change column name
colname <- toString(tag.user)
setnames(friends.name.df, c(colname))
# Write table
write.table(friends.name.df, file = paste(colname, ".csv"))
# bind data in the same data.frame
alldata <- rbind.fill(alldata, friends.name.df)
#data <- cbind(list(data, friends.name.df))
}
else{
print(paste(i, tag.user, "<== friends count > 500"))
}
},
warning = function(w){},
error = function(e){
#ERROR (need to store it?)
print(paste("ERROR", tag.user))
},
finally = {
print("End Try&Catch")
})
i = i+1
}

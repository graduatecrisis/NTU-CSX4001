rank = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank$point = 21-rank$排行
url = read.csv("url.csv",stringsAsFactors=FALSE,header = F)
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
shinyServer(function(input, output) {
# Compute the forumla text in a reactive expression since it is
# shared by the output$caption and output$mpgPlot expressions
formulaText <- reactive({
paste("mpg ~", input$variable)
})
# Return the formula text for printing as a caption
output$caption <- renderText({
formulaText()
})
# Generate a plot of the requested variable against mpg and only
# include outliers if requested
output$mpgPlot <- renderPlot({
boxplot(as.formula(formulaText()),
data = mpgData,
outline = input$outliers)
})
})
shiny::runApp('GAME')
rsconnect::setAccountInfo(name='perilium',
token='B4B46DB01C91FFF14469639DA621E961',
secret='+vPFOvxSyTyBTCYtonfAmLIF8Fs9Kb7SGApXSfl8')
runApp('GAME')
# Define UI for miles per gallon application
shinyUI(
navbarPage("CSX4001",
tabPanel("前言",
headerPanel("巴哈姆特PC評價排名前20的遊戲分析"),
mainPanel(
TextOutput("這是一個宅宅懷抱著遠大的夢想所製出的作品，希望各位喜歡~~\n
這次的資料採用了巴哈姆特論壇所統計的遊戲評分排名前20名的遊戲進行分析，\n
試著想看看遊戲市場的趨勢以及為何這些遊戲走紅。")
)
),
navbarMenu("總體分析",
tabPanel("類別分布",
plotOutput("table")
),
tabPanel("發布時間與評價",
fluidRow(
column(6,
includeMarkdown("about.md")
)
)
),
tabPanel("玩家注重的元素",
DT::dataTableOutput("table")
)
),
tabPanel("個體分析",
verbatimTextOutput("summary")
),
tabPanel("資料表",
DT::dataTableOutput("ran")
)
)
)
# Define UI for miles per gallon application
shinyUI(
navbarPage("CSX4001",
tabPanel("前言",
headerPanel("巴哈姆特PC評價排名前20的遊戲分析"),
mainPanel(
TextOutput("這是一個宅宅懷抱著遠大的夢想所製出的作品，希望各位喜歡~~\n
這次的資料採用了巴哈姆特論壇所統計的遊戲評分排名前20名的遊戲進行分析，\n
試著想看看遊戲市場的趨勢以及為何這些遊戲走紅。")
)
),
navbarMenu("總體分析",
tabPanel("類別分布",
plotOutput("table")
),
tabPanel("發布時間與評價",
fluidRow(
column(6,
includeMarkdown("about.md")
)
)
),
tabPanel("玩家注重的元素",
DT::dataTableOutput("table")
)
),
tabPanel("個體分析",
verbatimTextOutput("summary")
),
tabPanel("資料表",
DT::dataTableOutput("ran")
)
)
)
# Define UI for miles per gallon application
shinyUI(
navbarPage("CSX4001",
tabPanel("前言",
headerPanel("巴哈姆特PC評價排名前20的遊戲分析"),
mainPanel(
TextOutput("這是一個宅宅懷抱著遠大的夢想所製出的作品，希望各位喜歡~~\n
這次的資料採用了巴哈姆特論壇所統計的遊戲評分排名前20名的遊戲進行分析，\n
試著想看看遊戲市場的趨勢以及為何這些遊戲走紅。")
)
),
navbarMenu("總體分析",
tabPanel("類別分布",
plotOutput("table")
),
tabPanel("發布時間與評價",
fluidRow(
column(6,
includeMarkdown("about.md")
)
)
),
tabPanel("玩家注重的元素",
DT::dataTableOutput("table")
)
),
tabPanel("個體分析",
verbatimTextOutput("summary")
),
tabPanel("資料表",
DT::dataTableOutput("ran")
)
)
)
library(shiny)
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
DT::datatable(ran)
output$tabel <- DT::renderDataTable({
DT::datatable(ran)
})
install.packages("DT")
library(DT)
runApp('GAME')
ran = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank= ran
rank$point = 21-rank$排行
url = read.csv("url.csv",stringsAsFactors=FALSE,header = F)
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
rank.an = rank
rank.an = rank.an %>%
group_by(類型) %>%
summarise(no_rows = length(類型))
cou = c()
for(i in c(1:20)){
for(j in rate[[2*i-1]]){
cou = c(cou,j)
}
}
cou= as.factor(cou)
cou = data.frame(cou,c(1:100))
cu = cou %>%
group_by(cou) %>%
summarise(freq = length(cou))
cu = arrange(cu, desc(freq))
shinyServer(function(input, output) {
output$catPlot <- renderPlotly({
p <- plot_ly(rank.an, labels = ~類型,values = ~no_rows, type = 'pie')%>%
layout(title = '巴哈姆特PC遊戲評分前20類型比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
})
output$timePlot <- renderPlotly({
p <- plot_ly(rank, x= ~發售日期 ,y= ~rankpoint, type = 'scatter',mode="markers",text = ~paste('遊戲名稱: ', 作品名稱))
})
output$elePlot <- renderPlotly({
p <- plot_ly(cu, labels = ~cou,values = ~freq, type = 'pie') %>%
layout(title = '巴哈姆特PC遊戲評分前20遊戲特色比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
})
output$tabel <- DT::renderDataTable({
DT::datatable(ran)
})
})
runApp('GAME')
runApp('GAME')
runApp('GAME')
ran = read.csv("RATE.csv",stringsAsFactors=FALSE,encoding = "UTF-8")
warnings()
View(ran)
knitr::opts_chunk$set(echo = TRUE)
for(i in c(0:19)){
raw <- read_html(url$V1[i])
fea <- html_nodes(raw,"#BH-slave ul:nth-child(1) li")%>%html_text(raw)
per <- html_nodes(raw,".ACG-persent span ")%>%html_text(raw)
rate.i = data.frame(fea,per,stringsAsFactors=FALSE)
if(i == 1){
rate = data.frame(rate.i,stringsAsFactors=FALSE)
}
else{
rate = data.frame(rate,rate.i,stringsAsFactors=FALSE)
}
}
library(rvest)
for(i in c(0:19)){
raw <- read_html(url$V1[i])
fea <- html_nodes(raw,"#BH-slave ul:nth-child(1) li")%>%html_text(raw)
per <- html_nodes(raw,".ACG-persent span ")%>%html_text(raw)
rate.i = data.frame(fea,per,stringsAsFactors=FALSE)
if(i == 1){
rate = data.frame(rate.i,stringsAsFactors=FALSE)
}
else{
rate = data.frame(rate,rate.i,stringsAsFactors=FALSE)
}
}
View(rate)
write.csv(rate,"feature_rate.csv",encoding="UTF-8")
write.csv(rate,"feature_rate.csv",fileEncoding = "UTF-8")
rank = read.csv("RATE.csv",stringsAsFactors=FALSE)
write.csv(rank,"RATE.csv",fileEncoding = "UTF-8")
runApp('GAME')
ran = read.csv("RATE.csv",stringsAsFactors=FALSE,encoding = "UTF-8")
ran = read.csv("RATE.csv",stringsAsFactors=FALSE,decoding = "UTF-8")
ran = read.csv("RATE.csv",stringsAsFactors=FALSE)
ran = read.csv("RATE.csv",stringsAsFactors=FALSE)
View(ran)
write.csv(rank,"RATE.csv",fileEncoding = "UTF-8")
write.csv(rank,"RATE.csv")
runApp('GAME')
runApp('GAME')
View(ran)
ran = read.csv("RATE.csv",stringsAsFactors=FALSE)
View(ran)
rank= ran
rank$point = 21-rank$Rank
url = read.csv("url.csv",stringsAsFactors=FALSE,header = F)
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
View(url)
View(rate)
ran
view(ran)
View(ran)
ran = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank= ran
rank$point = 21-rank$Rank
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
write.csv(rate,"feature_rate.csv")
runApp('GAME')
runApp('GAME')
shiny::runApp('GAME')
runApp('GAME')
output$aTab <- renderDataTable({
DT::datatable(ran)
})
library(shiny)
library(datasets)
library(rvest)
library(DT)
ran = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank= ran
rank$point = 21-rank$Rank
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
rank.an = rank
rank.an = rank.an %>%
group_by(Type) %>%
summarise(no_rows = length(Type))
cou = c()
for(i in c(1:20)){
for(j in rate[[2*i-1]]){
cou = c(cou,j)
}
}
cou= as.factor(cou)
cou = data.frame(cou,c(1:100))
cu = cou %>%
group_by(cou) %>%
summarise(freq = length(cou))
cu = arrange(cu, desc(freq))
shinyServer(function(input, output) {
output$catPlot <- renderPlotly({
p <- plot_ly(rank.an, labels = ~Type ,values = ~no_rows, type = 'pie')%>%
layout(title = '巴哈姆特PC遊戲評分前20Type比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
})
output$timePlot <- renderPlotly({
p <- plot_ly(rank, x= ~Date ,y= ~rankpoint, type = 'scatter',mode="markers",text = ~paste('遊戲名稱: ', Name))
})
output$elePlot <- renderPlotly({
p <- plot_ly(cu, labels = ~cou,values = ~freq, type = 'pie') %>%
layout(title = '巴哈姆特PC遊戲評分前20遊戲特色比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
})
output$aTab <- renderDataTable({
DT::datatable(ran)
})
})
output
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
library(shiny)
library(datasets)
library(rvest)
library(DT)
runApp('GAME')
runApp('GAME')
runApp('GAME')
rank.an = rank
rank.an = rank.an %>%
group_by(Type) %>%
summarise(no_rows = length(Type))
library(shiny)
library(datasets)
library(rvest)
library(DT)
library(dplyr)
ran = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank= ran
rank$point = 21-rank$Rank
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
rank.an = rank
rank.an = rank.an %>%
group_by(Type) %>%
summarise(no_rows = length(Type))
cou = c()
for(i in c(1:20)){
for(j in rate[[2*i-1]]){
cou = c(cou,j)
}
}
cou= as.factor(cou)
cou = data.frame(cou,c(1:100))
cu = cou %>%
group_by(cou) %>%
summarise(freq = length(cou))
cu = arrange(cu, desc(freq))
shinyServer(function(input, output) {
output$catPlot <- renderPlotly({
p <- plot_ly(rank.an, labels = ~Type ,values = ~no_rows, type = 'pie')%>%
layout(title = 'Type percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
})
output$timePlot <- renderPlotly({
p <- plot_ly(rank, x= ~Date ,y= ~rankpoint, type = 'scatter',mode="markers",text = ~paste('Name: ', Name))
})
output$elePlot <- renderPlotly({
p <- plot_ly(cu, labels = ~cou,values = ~freq, type = 'pie') %>%
layout(title = 'feature percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
})
output$aTab <- renderDataTable({
DT::datatable(ran)
})
})
runApp('GAME')
runApp('GAME')
runApp('GAME')
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(plotly)
library(dplyr)
library(knitr)
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_6&7&8(Project_1)/Project_1")
rank = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank$rankpoint = 21-rank$排行
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(plotly)
library(dplyr)
library(knitr)
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_6&7&8(Project_1)/Project_1")
rank = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank$rankpoint = 21-rank$Rank
url = read.csv("url.csv",stringsAsFactors=FALSE,header = F)
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
kable(rank)
#category
rank.an = rank
rank.an = rank.an %>%
group_by(Type) %>%
summarise(no_rows = length(Type))
plot_ly(rank.an, labels = ~Type,values = ~no_rows, type = 'pie') %>%
layout(title = '巴哈姆特PC遊戲評分前20類型比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
#released date
plot_ly(rank, x= ~Date ,y= ~rankpoint, type = 'scatter',mode="markers",text = ~paste('遊戲名稱: ', 作品名稱))
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(plotly)
library(dplyr)
library(knitr)
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_6&7&8(Project_1)/Project_1")
rank = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank$rankpoint = 21-rank$Rank
url = read.csv("url.csv",stringsAsFactors=FALSE,header = F)
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
kable(rank)
#category
rank.an = rank
rank.an = rank.an %>%
group_by(Type) %>%
summarise(no_rows = length(Type))
plot_ly(rank.an, labels = ~Type,values = ~no_rows, type = 'pie') %>%
layout(title = '巴哈姆特PC遊戲評分前20類型比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
#released date
plot_ly(rank, x= ~Date ,y= ~rankpoint, type = 'scatter',mode="markers",text = ~paste('遊戲名稱: ', 作品名稱))
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(plotly)
library(dplyr)
library(knitr)
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_6&7&8(Project_1)/Project_1")
rank = read.csv("RATE.csv",stringsAsFactors=FALSE)
rank$rankpoint = 21-rank$Rank
url = read.csv("url.csv",stringsAsFactors=FALSE,header = F)
rate = read.csv("feature_rate.csv",stringsAsFactors=FALSE,header = T)
kable(rank)
#category
rank.an = rank
rank.an = rank.an %>%
group_by(Type) %>%
summarise(no_rows = length(Type))
plot_ly(rank.an, labels = ~Type,values = ~no_rows, type = 'pie') %>%
layout(title = '巴哈姆特PC遊戲評分前20類型比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
#released date
plot_ly(rank, x= ~Date ,y= ~rankpoint, type = 'scatter',mode="markers",text = ~paste('遊戲名稱: ', Name))
cou = c()
for(i in c(1:20)){
for(j in rate[[2*i-1]]){
cou = c(cou,j)
}
}
cou= as.factor(cou)
cou = data.frame(cou,c(1:100))
plot_ly(cou ,x= ~cou ,type = 'histogram')
cu = cou %>%
group_by(cou) %>%
summarise(freq = length(cou))
cu = arrange(cu, desc(freq))
plot_ly(cu, labels = ~cou,values = ~freq, type = 'pie') %>%
layout(title = '巴哈姆特PC遊戲評分前20遊戲特色比例',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
runApp('GAME')
shiny::runApp('debug')
runApp('GAME')
runApp('GAME')
runApp('debug')
runApp('debug')
runApp('debug')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('debug')
runApp('debug')
runApp('debug')
runApp('debug')
runApp('debug')
runApp('debug')
runApp('debug')
runApp('Try')
runApp('Try')
runApp('debug')
runApp('debug')
runApp('GAME')
runApp('GAME')
runApp('GAME')
runApp('Try')
runApp('GAME')
plot_ly(rank.an, labels = ~Type ,values = ~no_rows, type = 'pie')%>%
layout(title = 'Type percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
runApp('GAME')
runApp('GAME')
runApp('debug')
p <- plot_ly(rank.an, labels = ~Type ,values = ~no_rows, type = 'pie')
p <- layout(title = 'Type percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p <- plot_ly(rank.an, labels = ~Type ,values = ~no_rows, type = 'pie') %>%layout(title = 'Type percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(rank.an, labels = ~Type ,values = ~no_rows, type = 'pie') %>%layout(title = 'Type percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(rank.an, labels = Type ,values = no_rows, type = 'pie') %>%layout(title = 'Type percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(rank.an, labels = ~Type ,values = ~no_rows, type = 'pie') %>%layout(title = 'Type percentage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))

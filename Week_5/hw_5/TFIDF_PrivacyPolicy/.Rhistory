count(word, sort = TRUE) %>%
filter(n > 20)
comparison_word_freq
wordcloud2(data = comparison_word_freq, size=0.5)
# Find the most frequently used word in each website
comparison_word_freq_each_website <- comparison %>%
anti_join(stop_words) %>%
group_by(websites_title) %>%
count(word, sort = TRUE) %>%
top_n(15) %>%
ungroup() %>%
mutate(website = factor(websites_title),
text_order = nrow(.):1) %>%
ggplot(aes(reorder(word, text_order), n, fill = website)) +
geom_bar(stat = "identity") +
facet_wrap(~ website, scales = "free_y") +
labs(x = "NULL", y = "Frequency") +
coord_flip() +
theme(legend.position="none")
comparison_word_freq_each_website
# calculate percent of word use across all websites
site_pct <- comparison %>%
anti_join(stop_words) %>%
count(word) %>%
transmute(word, all_words = n / sum(n))
# calculate percent of word use within each website
frequency <- comparison %>%
anti_join(stop_words) %>%
count(websites_title, word) %>%
mutate(website_words = n / sum(n)) %>%
left_join(site_pct) %>%
arrange(desc(website_words))
frequency
# Find the most frequently used word in each website
comparison_word_freq_each_website <- comparison %>%
anti_join(stop_words) %>%
group_by(websites_title) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(website = factor(websites_title),
text_order = nrow(.):1) %>%
ggplot(aes(reorder(word, text_order), n, fill = website)) +
geom_bar(stat = "identity") +
facet_wrap(~ website, scales = "free_y") +
labs(x = "NULL", y = "Frequency") +
coord_flip() +
theme(legend.position="none")
comparison_word_freq_each_website
wordcloud2(data = comparison_word_freq, size=1)
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
head(data)
pca <- prcomp(formula = ~ X1+X2+X3,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
pca <- prcomp(formula = ~ X1+X2+X3+X4+X5+X6+X7,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
# 使用plot()函式
plot(pca,         # 放pca
type="line", # 用直線連結每個點
main="Scree Plot for 2012MLB") # 主標題
# 用藍線標示出特徵值=1的地方
abline(h=1, col="blue") # Kaiser eigenvalue-greater-than-one rule
vars <- (pca$sdev)^2  # 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
# 使用plot()函式
plot(pca,         # 放pca
type="line", )
# 用藍線標示出特徵值=1的地方
abline(h=1, col="blue") # Kaiser eigenvalue-greater-than-one rule
vars <- (pca$sdev)^2  # 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars
props <- vars / sum(vars)
props
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
cumulative.props[5]
plot(cumulative.props)
top3_pca.data <- pca$x[, 1:5]
top3_pca.data
pca$rotation
top3.pca.eigenvector <- pca$rotation[, 1:5]
top3.pca.eigenvector
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
second.pca <- top3.pca.eigenvector[, 2]  #  第二主成份
third.pca <- top3.pca.eigenvector[, 3]   #  第三主成份
first.pca[order(first.pca, decreasing=FALSE)]
dotchart(first.pca[order(first.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="red")
second.pca[order(second.pca, decreasing=FALSE)]
dotchart(second.pca[order(second.pca, decreasing=FALSE)] ,  # 排序後的係數
main="Loading Plot for PC2",                       # 主標題
xlab="Variable Loadings",                          # x軸的標題
col="blue")
dotchart(first.pca[order(first.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="red")
dotchart(second.pca[order(second.pca, decreasing=FALSE)] ,  # 排序後的係數
main="Loading Plot for PC2",                       # 主標題
xlab="Variable Loadings",                          # x軸的標題
col="blue")
third.pca[order(third.pca, decreasing=FALSE)]
dotchart(third.pca[order(third.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC3",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="purple")
biplot(pca, choices=1:2)
raw <- read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-1.html")
library(rvest)
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_6/hw_6/Project_1")
url <- read.csv("url.csv")
raw <- read_html(url[1])
View(url)
raw <- read_html(as.character(url[1])
raw
raw <- read_html(as.character(url[1])
raw <- read_html(as.character(url[1]))
url <- read.csv("url.csv")
View(url)
url <- read.csv("url.csv",header=F)
View(url)
raw <- read_html(as.character(url$v1[1]))
raw <- read_html(as.character(url$V1[1]))
View(raw)
raw <- html_nodes(raw, "#video-title") %>% html_text(raw)
raw
raw <- html_nodes(raw, "#video-title") %>% html_text(raw)
raw <- read_html(as.character(url$V1[1]))
raw <- html_nodes(raw, "#video-title") %>% html_text(raw)
raw
raw <- html_nodes(raw, "#video-title")
url <- read.csv("url.csv",header=F)
raw <- read_html(as.character(url$V1[1]))
raw <- html_nodes(raw, "#video-title")
raw
View(raw)
raw <- html_nodes(raw, "#meta , #video-title")
raw
raw <- read_html(as.character(url$V1[1]))
rawl <- html_nodes(raw, "#meta , #video-title")
rawl
rawl <- html_nodes(raw, "#video-title")
rawl
rawl <- html_nodes(raw, "#video-title")
%>% html_text(raw)
rawl
View(raw)
raw <- read_html(as.character(url$V1[1]))
View(raw)
raw <- read_html(https://www.youtube.com/user/VanossGaming/videos)
raw <- read_html("https://www.youtube.com/user/VanossGaming/videos")
View(raw)
library (tuber)
install("tuber")
install.packages("tuber")
library (tuber)
app_id <- "1088891801215-srtv9mvhb4dt1qr62254vfcgqfg9cp33.apps.googleusercontent.com"
app_secret <- "hyJRTIMMvnBNj6WKE6jIzcXa"
yt_oauth(app_id, app_secret)
raw <- read_html("https://www.youtube.com/user/VanossGaming/videos")
raw <- read_html("https://www.youtube.com/user/VanossGaming/videos")
knitr::opts_chunk$set(echo = TRUE)
raw <- read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-1.html")
raw <- read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-1.html")
View(raw)
raw1 <- html_nodes(raw, "h2+ table td:nth-child(1)") %>% html_text(raw)
raw2 <- html_nodes(raw, "h2+ table td:nth-child(2)") %>% html_text(raw)
raw3 <- html_nodes(raw, "h2+ table td:nth-child(3)") %>% html_text(raw)
raw4 <- html_nodes(raw, "h2+ table td:nth-child(4)") %>% html_text(raw)
need <- data.frame(raw1,raw2,raw3,raw4)
need
raw <- read_html("http://www.319papago.idv.tw/lifeinfo/7-11/7-11-300-1.html")
raw1 <- html_nodes(raw, "h2+ table td:nth-child(1)") %>% html_text(raw)
raw2 <- html_nodes(raw, "h2+ table td:nth-child(2)") %>% html_text(raw)
raw4 <- html_nodes(raw, "h2+ table td:nth-child(4)") %>% html_text(raw)
need <- data.frame(raw1,raw2,raw3,raw4)
need
View(raw)
raw <- read_html("https://www.youtube.com/user/VanossGaming/videos")
View(raw)
rawl <- html_nodes(raw, "#video-title")
View(rawl)
View(raw)
raw <- read_html("https://www.youtube.com/user/VanossGaming/videos")
View(raw)
rawl <- html_nodes(raw, "#video-title")
rawl <- html_nodes(raw, ".h3 a")
rawl <- html_nodes(raw, ".style-scope")
rawl
raw <- read_html("https://www.youtube.com/user/VanossGaming/videos")
rawl <- html_nodes(raw, "#contents #items , #thumbnail , #video-title")
rawl
rawl <- html_nodes(raw, "#contents #items , #thumbnail , #video-title")
rawl <- html_nodes(raw, "#contents #items , #thumbnail , #video-title")
rawl <- html_nodes(raw, "#contents #items , #thumbnail , #video-title")
rawl <- html_nodes(raw, "#contents #items , #thumbnail , #video-title")
raw <- read_html("https://www.youtube.com/user/VanossGaming/videos")
rawl <- read_html("https://www.youtube.com/user/VanossGaming/videos")
View(raw)
rawl <- html_nodes(raw, "#meta")
rawl <- html_nodes(raw, "#meta")
ytb.nodes <-
html_nodes(raw,"div.yt-lockup.clearfix.yt-lockup-video.yt-lockup-grid")
View(ytb.nodes)
View(ytb.nodes)
ytb.nodes <-
html_nodes(raw,"div.yt-lockup.clearfix.yt-lockup-video.yt-lockup-grid")%>% html_text(raw)
dotchart(fifth.pca[order(fifth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="lightblue")
fifth.pca[order(fifth.pca, decreasing=FALSE)]
dotchart(fifth.pca[order(fifth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="lightblue")
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
second.pca <- top3.pca.eigenvector[, 2]  #  第二主成份
third.pca <- top3.pca.eigenvector[, 3]   #  第三主成份
fourth.pca <- top3.pca.eigenvector[, 4]   #  第三主成份
fifth.pca <- top3.pca.eigenvector[, 5]   #  第三主成份
first.pca[order(first.pca, decreasing=FALSE)]
dotchart(first.pca[order(first.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="red")
second.pca[order(second.pca, decreasing=FALSE)]
dotchart(second.pca[order(second.pca, decreasing=FALSE)] ,  # 排序後的係數
main="Loading Plot for PC2",                       # 主標題
xlab="Variable Loadings",                          # x軸的標題
col="blue")
third.pca[order(third.pca, decreasing=FALSE)]
dotchart(third.pca[order(third.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC3",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="purple")
fourth.pca[order(fourth.pca, decreasing=FALSE)]
dotchart(fourth.pca[order(fourth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="orange")
fifth.pca[order(fifth.pca, decreasing=FALSE)]
dotchart(fifth.pca[order(fifth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="lightblue")
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
second.pca <- top3.pca.eigenvector[, 2]  #  第二主成份
top3.pca.eigenvector <- pca$rotation[, 1:5]
top3.pca.eigenvector
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
head(data)
pca <- prcomp(formula = ~ X1+X2+X3+X4+X5+X6+X7,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
# 用藍線標示出特徵值=1的地方
abline(h=1, col="blue") # Kaiser eigenvalue-greater-than-one rule
vars <- (pca$sdev)^2  # 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars
props <- vars / sum(vars)
# 使用plot()函式
plot(pca,         # 放pca
type="line", )
props
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
cumulative.props[5]
plot(cumulative.props)
top3_pca.data <- pca$x[, 1:5]
top3_pca.data
pca$rotation
top3.pca.eigenvector <- pca$rotation[, 1:5]
top3.pca.eigenvector
second.pca <- top3.pca.eigenvector[, 2]  #  第二主成份
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
third.pca <- top3.pca.eigenvector[, 3]   #  第三主成份
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
head(data)
pca <- prcomp(formula = ~ X1+X2+X3+X4+X5+X6+X7,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_6/hw_6/Project_1")
setwd("C:/Users/perot/Desktop/NTU-CSX4001/Week_5/hw_5/TFIDF_PrivacyPolicy")
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
head(data)
pca <- prcomp(formula = ~ X1+X2+X3+X4+X5+X6+X7,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
# 使用plot()函式
plot(pca,         # 放pca
type="line", )
# 用藍線標示出特徵值=1的地方
abline(h=1, col="blue") # Kaiser eigenvalue-greater-than-one rule
vars <- (pca$sdev)^2  # 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars
props <- vars / sum(vars)
props
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
cumulative.props[5]
plot(cumulative.props)
top3_pca.data <- pca$x[, 1:5]
top3_pca.data
pca$rotation
top3.pca.eigenvector <- pca$rotation[, 1:5]
top3.pca.eigenvector
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
second.pca <- top3.pca.eigenvector[, 2]  #  第二主成份
third.pca <- top3.pca.eigenvector[, 3]   #  第三主成份
fourth.pca <- top3.pca.eigenvector[, 4]   #  第三主成份
fifth.pca <- top3.pca.eigenvector[, 5]   #  第三主成份
first.pca[order(first.pca, decreasing=FALSE)]
dotchart(first.pca[order(first.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="red")
second.pca[order(second.pca, decreasing=FALSE)]
dotchart(second.pca[order(second.pca, decreasing=FALSE)] ,  # 排序後的係數
main="Loading Plot for PC2",                       # 主標題
xlab="Variable Loadings",                          # x軸的標題
col="blue")
third.pca[order(third.pca, decreasing=FALSE)]
dotchart(third.pca[order(third.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC3",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="purple")
fourth.pca[order(fourth.pca, decreasing=FALSE)]
dotchart(fourth.pca[order(fourth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="orange")
fifth.pca[order(fifth.pca, decreasing=FALSE)]
dotchart(fifth.pca[order(fifth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="lightblue")
biplot(pca, choices=1:2)
pca <- prcomp(formula = ~ X1+X2+X3+X4+X5+X6+X7,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
View(data)
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
head(data)
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
head(data)
pca <- prcomp(formula = ~ X1+X2+X3+X4+X5+X6+X7,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
# 使用plot()函式
plot(pca,         # 放pca
type="line", )
# 用藍線標示出特徵值=1的地方
abline(h=1, col="blue") # Kaiser eigenvalue-greater-than-one rule
vars <- (pca$sdev)^2  # 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars
props <- vars / sum(vars)
props
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
cumulative.props[5]
plot(cumulative.props)
top3_pca.data <- pca$x[, 1:5]
top3_pca.data
pca$rotation
top3.pca.eigenvector <- pca$rotation[, 1:5]
top3.pca.eigenvector
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
second.pca <- top3.pca.eigenvector[, 2]  #  第二主成份
third.pca <- top3.pca.eigenvector[, 3]   #  第三主成份
fourth.pca <- top3.pca.eigenvector[, 4]   #  第三主成份
fifth.pca <- top3.pca.eigenvector[, 5]   #  第三主成份
first.pca[order(first.pca, decreasing=FALSE)]
dotchart(first.pca[order(first.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="red")
second.pca[order(second.pca, decreasing=FALSE)]
dotchart(second.pca[order(second.pca, decreasing=FALSE)] ,  # 排序後的係數
main="Loading Plot for PC2",                       # 主標題
xlab="Variable Loadings",                          # x軸的標題
col="blue")
third.pca[order(third.pca, decreasing=FALSE)]
dotchart(third.pca[order(third.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC3",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="purple")
fourth.pca[order(fourth.pca, decreasing=FALSE)]
dotchart(fourth.pca[order(fourth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="orange")
fifth.pca[order(fifth.pca, decreasing=FALSE)]
dotchart(fifth.pca[order(fifth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="lightblue")
biplot(pca, choices=1:2)
View(data)
pca <- prcomp(formula = ~ FB+Flickr+Line+Pinterest+Reddit+Tumblr+Twitter,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
pca <- prcomp(formula = ~ FB+Flickr+Line+Pinretest+Reddit+Tumblr+Twitter,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
data <- read.csv("show.csv",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
head(data)
pca <- prcomp(formula = ~ FB+Flickr+Line+Pinretest+Reddit+Tumblr+Twitter,  #選擇七個變數
data = data,                           # 資料
scale = TRUE)                          # 正規化資料
# 這就是我們的主成份
pca
# 使用plot()函式
plot(pca,         # 放pca
type="line", )
# 用藍線標示出特徵值=1的地方
abline(h=1, col="blue") # Kaiser eigenvalue-greater-than-one rule
vars <- (pca$sdev)^2  # 從pca中取出標準差(pca$sdev)後再平方，計算variance(特徵值)
vars
props <- vars / sum(vars)
props
cumulative.props <- cumsum(props)  # 累加前n個元素的值
cumulative.props
cumulative.props[5]
plot(cumulative.props)
top3_pca.data <- pca$x[, 1:5]
top3_pca.data
pca$rotation
top3.pca.eigenvector <- pca$rotation[, 1:5]
top3.pca.eigenvector
first.pca <- top3.pca.eigenvector[, 1]   #  第一主成份
second.pca <- top3.pca.eigenvector[, 2]  #  第二主成份
third.pca <- top3.pca.eigenvector[, 3]   #  第三主成份
fourth.pca <- top3.pca.eigenvector[, 4]   #  第三主成份
fifth.pca <- top3.pca.eigenvector[, 5]   #  第三主成份
first.pca[order(first.pca, decreasing=FALSE)]
dotchart(first.pca[order(first.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="red")
second.pca[order(second.pca, decreasing=FALSE)]
dotchart(second.pca[order(second.pca, decreasing=FALSE)] ,  # 排序後的係數
main="Loading Plot for PC2",                       # 主標題
xlab="Variable Loadings",                          # x軸的標題
col="blue")
third.pca[order(third.pca, decreasing=FALSE)]
dotchart(third.pca[order(third.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC3",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="purple")
fourth.pca[order(fourth.pca, decreasing=FALSE)]
dotchart(fourth.pca[order(fourth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="orange")
fifth.pca[order(fifth.pca, decreasing=FALSE)]
dotchart(fifth.pca[order(fifth.pca, decreasing=FALSE)] ,   # 排序後的係數
main="Loading Plot for PC1",                      # 主標題
xlab="Variable Loadings",                         # x軸的標題
col="lightblue")
biplot(pca, choices=1:2)
biplot(pca, choices=1:3)
biplot(pca, choices=1,3)
biplot(pca, choices=2,:3,)
biplot(pca, choices=2:3,)
biplot(pca, choices=3:4)
biplot(pca, choices=4:5)
biplot(pca, choices=1,5)
biplot(pca, choices=1:5)
biplot(pca, choices=1,:5)
biplot(pca, choices=1:5,)
biplot(pca, choices=5)
biplot(pca, choices=1;2)
biplot(pca, choices=1:2)
biplot(pca, choices=12:3)
biplot(pca, choices=2:3)
